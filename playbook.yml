- name: Git pull setup
  hosts: myhosts
  vars:
    pg_pwd: dYHRdg59cKtnkqxLMV
  tasks:
    - name: Ping my hosts
      ansible.builtin.ping:

    - name: Print message
      ansible.builtin.debug:
        msg: Hello world

    - name: Add deploy user
      ansible.builtin.user:
        name: deploy
        shell: /bin/bash

    - name: Create .ssh folder
      ansible.builtin.file:
        path: /home/deploy/.ssh/
        state: directory
        owner: deploy

#    - name: Copy SSH key for GitHub
#      ansible.builtin.copy:
#        src: ~/.ssh/id_ed25519
#        dest: /home/deploy/.ssh/id_ed25519
#        mode: 0600
#        owner: deploy
#
#    - name: Add Github to known hosts
#      ansible.builtin.known_hosts:
#        name: github.com
#        #key: github.com ssh-ed25519 SHA256:+DiY3wvvV6TuJJhbpZisF/zLDA0zPMSvHdkr4UvCOqU
#        key: github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
#      become: true
#      become_user: deploy

    - name: Create repo folder
      ansible.builtin.file:
        path: /home/deploy/willemvandervegt/
        state: directory
        owner: deploy

#    - name: Install git
#      ansible.builtin.apt:
#        name: git
#
#    - name: Clone git repo
#      ansible.builtin.git:
#        dest: ~/willemvandervegt
#        repo: git@github.com:HarmVanDerVegt/willemvandervegt.git
#        version: master
#      become: true
#      become_user: deploy

    - name: Install nginx
      ansible.builtin.apt:
        name: nginx

    - name: Install Passenger dependencies
      ansible.builtin.apt:
        name: [dirmngr, apt-transport-https, ca-certificates, curl]

    - name: Install PGP key for Passenger
      ansible.builtin.apt_key:
        url: https://oss-binaries.phusionpassenger.com/auto-software-signing-gpg-key.txt
        keyring: /etc/apt/trusted.gpg.d/phusion.gpg

    - name: Add Passenger APT repository
      ansible.builtin.apt_repository:
        repo: deb https://oss-binaries.phusionpassenger.com/apt/passenger bookworm main

    - name: Update APT
      ansible.builtin.apt:
        update_cache: yes

    - name: Install Passenger + Nginx module
      ansible.builtin.apt:
        name: libnginx-mod-http-passenger

#    - name: Restart Nginx
#      ansible.builtin.service:
#        name: nginx
#        state: restarted
#      changed_when: False

    - name: Install build essentials
      ansible.builtin.apt:
        name: build-essential

    - name: Install libz
      ansible.builtin.apt:
        name: libz-dev

    - name: Download rbenv
      ansible.builtin.git:
        repo: https://github.com/rbenv/rbenv.git
        dest: ~/.rbenv
      become: true
      become_user: deploy

    - name: Download ruby-build
      ansible.builtin.git:
        repo: https://github.com/rbenv/ruby-build.git
        dest: ~/.rbenv/plugins/ruby-build
      become: true
      become_user: deploy

    - name: Download rbenv-vars
      ansible.builtin.git:
        repo: https://github.com/rbenv/rbenv-vars.git
        dest: ~/.rbenv/plugins/rbenv-vars
      become: true
      become_user: deploy

#    - name: Add rbenv to PATH
#      ansible.builtin.lineinfile:
#        line: PATH="$HOME/.rbenv/bin:$PATH"
#        path: ~/.profile
#        create: true
#      become: true
#      become_user: deploy
#
#    - name: Add rbenv initialization to PATH
#      ansible.builtin.lineinfile:
#        line: eval "$(rbenv init -)"
#        path: ~/.profile
#        create: true
#      become: true
#      become_user: deploy
#
#    - name: Add rbenv ruby-build to PATH
#      ansible.builtin.lineinfile:
#        line: export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"
#        path: ~/.profile
#        create: true
#      become: true
#      become_user: deploy

    - name: Install Ruby
      ansible.builtin.shell:
        cmd: /home/deploy/.rbenv/bin/rbenv init - && /home/deploy/.rbenv/bin/rbenv install 2.6.8
      become: true
      become_user: deploy
      args:
        creates: /home/deploy/.rbenv/version

    - name: Set default Ruby
      ansible.builtin.shell:
        cmd: /home/deploy/.rbenv/bin/rbenv init - && /home/deploy/.rbenv/bin/rbenv global 2.6.8
      become: true
      become_user: deploy
      args:
        creates: /home/deploy/.rbenv/version

    - name: Rehash Ruby shims
      ansible.builtin.shell:
        cmd: /home/deploy/.rbenv/bin/rbenv init - && /home/deploy/.rbenv/bin/rbenv rehash
      become: true
      become_user: deploy
      changed_when: False

    - name: Configure Nginx + Passenger
      ansible.builtin.template:
        src: mod-http-passenger.conf.j2
        dest: /etc/nginx/conf.d/mod-http-passenger.conf
        mode: 0644

    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
      changed_when: False

    - name: Remove default nginx server file
      ansible.builtin.file:
        name: /etc/nginx/sites-enabled/default
        state: absent

    - name: Create willemvandervegt nginx server file
      ansible.builtin.template:
        src: willemvandervegt.j2
        dest: /etc/nginx/sites-enabled/willemvandervegt
        mode: 0644

    - name: Restart Nginx
      ansible.builtin.service:
        name: nginx
        state: restarted
      changed_when: False

    - name: Install PostgreSQL
      ansible.builtin.apt:
        name: [postgresql, postgresql-contrib, libpq-dev]
#
#    - name: Install pip
#      ansible.builtin.apt:
#        name: python3-pip
#
#    - name: Create virtual environment
#      ansible.builtin.command:
#        cmd: python3 -m venv /home/deploy/.venv/
#        creates: /home/deploy/.venv/

#    - name: Install pipx
#      ansible.builtin.apt:
#        name: pipx
#
#    - name: Install virtualvenv
#      community.general.pipx:
#        name: virtualvenv

    - name: Install psycopg2-binary
      ansible.builtin.apt:
        name: python3-psycopg2
#        extra_args: --global --break-system-packages

    - name: Create PG user
      community.postgresql.postgresql_user:
        name: deploy
        password: "{{ pg_pwd }}"
      become: true
      become_user: postgres

    - name: Create PG database
      community.postgresql.postgresql_db:
        name: willemvandervegt_production
        owner: deploy
      become: true
      become_user: postgres

    - name: Add PG password to rbenv variables
      ansible.builtin.lineinfile:
        line: "WILLEMVANDERVEGT_DATABASE_PASSWORD={{ pg_pwd }}"
        dest: /home/deploy/willemvandervegt/.rbenv-vars
        create: true

    - name: Add Rails Secret Key Base to rbenv variables
# use `rails secret` to generate at a later date.
      ansible.builtin.lineinfile:
        line: "SECRET_KEY_BASE=5935de6146572b30289357e9dc5f6a9ab7aa508868a49d80432b5491d99b3d5760b50f5684a92a4f0f0fbe30e03d1043f07466234f0020d87ab4cea8d6c57d7e"
        dest: /home/deploy/willemvandervegt/.rbenv-vars
        create: true

    - name: Add Rails Master Key to rbenv variables
      ansible.builtin.lineinfile:
        line: "RAILS_MASTER_KEY=7336382d7f774822c30df563f82254af"
        dest: /home/deploy/willemvandervegt/.rbenv-vars
        create: true

#    - name: Production deploy config
#      ansible.builtin.template:
#        src: production_config.rb.j2
#        dest: /home/deploy/willemvandervegt/config/deploy/production_config.rb
#        mode: 0644
#        owner: deploy

    - name: Allow RSA as key pair
      ansible.builtin.template.lineinfile:
        line: PubkeyAcceptedKeyTypes=+ssh-rsa
        path: /etc/ssh/sshd_config

